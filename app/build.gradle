apply plugin: 'com.android.application'

android {
    def platformType = getPlatform()

    compileSdkVersion 33
    buildToolsVersion '30.0.3'
    defaultConfig {
        applicationId "com.vrviu.streamer"
        if(platformType == "vrviu_x86_64") {
            minSdkVersion 25
        } else {
            minSdkVersion 29

            externalNativeBuild {
                cmake {
                    cppFlags "-frtti -fexceptions -std=c++11 -O3"
                    arguments"-DANDROID_STL=c++_shared"
                }
            }

            ndk {
                abiFilters 'arm64-v8a'
            }
        }
        targetSdkVersion 33
        versionCode 5
        versionName "1.8.11"
    }

    signingConfigs {
        if(platformType == "vrviu_x86_64") {
            release {
                storeFile file("vrviu.keystore")
                storePassword '123456'
                keyAlias 'platform'
                keyPassword '123456'
            }

            debug {
                storeFile file("vrviu.keystore")
                storePassword '123456'
                keyAlias 'platform'
                keyPassword '123456'
            }
        } else {
            release {
                storeFile file("kona.keystore")
                storePassword '123456'
                keyAlias 'platform'
                keyPassword '123456'
            }

            debug {
                storeFile file("kona.keystore")
                storePassword '123456'
                keyAlias 'platform'
                keyPassword '123456'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    if(platformType != "vrviu_x86_64") {
        externalNativeBuild {
            cmake {
                path file('src/main/cpp/CMakeLists.txt')
                version '3.18.1'
            }
        }
    }
}

def static getPlatform() {
    def adbCommand = 'adb shell getprop ro.product.name'
    Process process = adbCommand.execute()
    process.in.eachLine { processing ->
        println processing
        return processing
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
}
